How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By showing all differences from a previously working version

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    More easily backtrack from testing new methods and more easily pinpointing changes to undo

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually: control breakpoints/milestones more easily, but must manually create a version
    before too many changes are made; automatically: less worry about saving changes but might
    be harder to consolidate related changes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Code usually involves many linked or related files that must change together, not usually
    the case with documents

How can you use the commands git log and git diff to view the history of files?

    Git log provides descriptive changes in files over time, git diff lets you see the specific
    code changes between those points

How might using version control make you more confident to make changes that
could break something?

    Branching out to try newer code can be done while an older/working version is always
    available for reference and regression

Now that you have your workspace set up, what do you want to try using Git for?

    Project 2
