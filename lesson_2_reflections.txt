What happens when you initialize a repository? Why do you need to do it?

	.git directory for metadata is created and master branch for repo is
	established. Needed to store the info about which files are in repo
	as well as info tracking commits.


How is the staging area different from the working directory and the repository? What value do you think it offers?

	It is merely a list of files rather than an actual set of files. It
	allows you to assemble a sensible commit that spans several files
	bit by bit and allows you to keep track of which files are ready or
	needed for the commit vs ones that aren't. It allows you to work on
	changes in unrelated files for future commits while still working on
	important changes in relevant files for the very next commit.


How can you use the staging area to make sure you have one commit per logical change?

	Double check that all necessary and only necessary changes are ready for
	a logical commit and make adjustments before committing.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Making major changes to working code, adding a major non-critical feature
	that may take time to get stable. Allows addressing of different
	priorities independently without breaking entire project over one aspect.


How do the diagrams help you visualize the branch structure?

	Diagrams are inherently visual


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Checked out branch is updated with changes from merged branch(es) and new
	HEAD becomes child to all merged commits
